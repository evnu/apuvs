%!PS-Adobe-2.0 EPSF-2.0
%%Title: graphs/4_summation_average.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Mon Nov 22 15:50:35 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (graphs/4_summation_average.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (evnu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 22 15:50:35 2010)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
602 728 M
63 0 V
stroke
518 728 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
602 1506 M
63 0 V
stroke
518 1506 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
602 2284 M
63 0 V
stroke
518 2284 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
602 3063 M
63 0 V
stroke
518 3063 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MRshow
1.000 UL
LTb
602 3841 M
63 0 V
stroke
518 3841 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
602 4619 M
63 0 V
stroke
518 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MRshow
1.000 UL
LTb
602 728 M
0 63 V
stroke
602 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1871 728 M
0 63 V
stroke
1871 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MCshow
1.000 UL
LTb
3140 728 M
0 63 V
stroke
3140 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40000)]
] -46.7 MCshow
1.000 UL
LTb
4409 728 M
0 63 V
stroke
4409 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60000)]
] -46.7 MCshow
1.000 UL
LTb
5678 728 M
0 63 V
stroke
5678 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80000)]
] -46.7 MCshow
1.000 UL
LTb
6947 728 M
0 63 V
stroke
6947 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 M
602 728 L
6345 0 V
0 3891 R
-6345 0 R
stroke
LCb setrgbcolor
112 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (ms)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 378 M
[ [(Helvetica) 140.0 0.0 true true 0 (Size of array in bytes)]
] -46.7 MCshow
LTb
3774 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Sum up array)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
1.00 0.65 0.00 C LCb setrgbcolor
4877 133 M
[ [(Helvetica) 140.0 0.0 true true 0 (Average execution time of 30 runs)]
] -46.7 MRshow
LT0
1.00 0.65 0.00 C 602 1882 Crs
608 1233 Crs
615 1179 Crs
621 845 Crs
627 1484 Crs
634 1068 Crs
640 833 Crs
646 844 Crs
653 1611 Crs
659 1052 Crs
665 1871 Crs
672 1436 Crs
678 837 Crs
684 1323 Crs
691 846 Crs
697 1059 Crs
704 881 Crs
710 2316 Crs
716 1077 Crs
723 1133 Crs
729 1077 Crs
735 851 Crs
742 1721 Crs
748 1645 Crs
754 940 Crs
761 1477 Crs
767 1322 Crs
773 1514 Crs
780 1906 Crs
786 1311 Crs
792 839 Crs
799 844 Crs
805 3856 Crs
811 1068 Crs
818 1082 Crs
824 1906 Crs
830 1754 Crs
837 1131 Crs
843 1101 Crs
849 870 Crs
856 1049 Crs
862 828 Crs
868 1074 Crs
875 831 Crs
881 1225 Crs
888 1057 Crs
894 1440 Crs
900 1103 Crs
907 832 Crs
913 827 Crs
919 2272 Crs
926 827 Crs
932 1851 Crs
938 831 Crs
945 1240 Crs
951 1110 Crs
957 1053 Crs
964 1129 Crs
970 1043 Crs
976 995 Crs
983 1228 Crs
989 1099 Crs
995 859 Crs
1002 835 Crs
1008 1261 Crs
1014 1014 Crs
1021 1387 Crs
1027 1122 Crs
1033 1031 Crs
1040 835 Crs
1046 860 Crs
1052 1503 Crs
1059 860 Crs
1065 1063 Crs
1072 1262 Crs
1078 858 Crs
1084 1241 Crs
1091 855 Crs
1097 1118 Crs
1103 828 Crs
1110 854 Crs
1116 856 Crs
1122 1139 Crs
1129 838 Crs
1135 846 Crs
1141 1216 Crs
1148 852 Crs
1154 855 Crs
1160 827 Crs
1167 854 Crs
1173 854 Crs
1179 828 Crs
1186 1685 Crs
1192 1066 Crs
1198 840 Crs
1205 1448 Crs
1211 832 Crs
1217 834 Crs
1224 835 Crs
1230 1030 Crs
1237 846 Crs
1243 854 Crs
1249 1696 Crs
1256 1553 Crs
1262 1068 Crs
1268 1478 Crs
1275 1432 Crs
1281 1242 Crs
1287 1065 Crs
1294 1200 Crs
1300 829 Crs
1306 1051 Crs
1313 845 Crs
1319 1263 Crs
1325 837 Crs
1332 1388 Crs
1338 838 Crs
1344 842 Crs
1351 1040 Crs
1357 1539 Crs
1363 1002 Crs
1370 862 Crs
1376 1466 Crs
1382 1099 Crs
1389 1317 Crs
1395 1059 Crs
1401 1269 Crs
1408 836 Crs
1414 1310 Crs
1421 834 Crs
1427 1028 Crs
1433 836 Crs
1440 1573 Crs
1446 847 Crs
1452 851 Crs
1459 1306 Crs
1465 845 Crs
1471 1254 Crs
1478 846 Crs
1484 1443 Crs
1490 858 Crs
1497 1048 Crs
1503 1443 Crs
1509 830 Crs
1516 1467 Crs
1522 857 Crs
1528 1477 Crs
1535 1068 Crs
1541 1183 Crs
1547 840 Crs
1554 1309 Crs
1560 1521 Crs
1566 844 Crs
1573 1074 Crs
1579 855 Crs
1585 1068 Crs
1592 1046 Crs
1598 1520 Crs
1605 1264 Crs
1611 874 Crs
1617 1784 Crs
1624 1446 Crs
1630 1890 Crs
1636 1383 Crs
1643 1316 Crs
1649 1155 Crs
1655 1102 Crs
1662 833 Crs
1668 1053 Crs
1674 1748 Crs
1681 860 Crs
1687 1257 Crs
1693 1069 Crs
1700 1221 Crs
1706 860 Crs
1712 1493 Crs
1719 1243 Crs
1725 1263 Crs
1731 834 Crs
1738 1249 Crs
1744 1125 Crs
1750 1216 Crs
1757 1052 Crs
1763 854 Crs
1769 1206 Crs
1776 1763 Crs
1782 1108 Crs
1789 1861 Crs
1795 839 Crs
1801 1466 Crs
1808 840 Crs
1814 977 Crs
1820 2496 Crs
1827 1500 Crs
1833 861 Crs
1839 838 Crs
1846 838 Crs
1852 846 Crs
1858 843 Crs
1865 1076 Crs
1871 864 Crs
1877 1460 Crs
1884 3278 Crs
1890 1384 Crs
1896 1076 Crs
1903 1521 Crs
1909 1244 Crs
1915 1721 Crs
1922 1254 Crs
1928 844 Crs
1934 1454 Crs
1941 1177 Crs
1947 1893 Crs
1953 1060 Crs
1960 1559 Crs
1966 1258 Crs
1973 860 Crs
1979 1348 Crs
1985 2639 Crs
1992 2015 Crs
1998 1271 Crs
2004 837 Crs
2011 1134 Crs
2017 1407 Crs
2023 1374 Crs
2030 1692 Crs
2036 1261 Crs
2042 2098 Crs
2049 2095 Crs
2055 1554 Crs
2061 1764 Crs
2068 841 Crs
2074 1826 Crs
2080 1294 Crs
2087 838 Crs
2093 842 Crs
2099 1161 Crs
2106 1050 Crs
2112 1193 Crs
2118 1069 Crs
2125 1086 Crs
2131 1274 Crs
2137 839 Crs
2144 1203 Crs
2150 838 Crs
2157 1065 Crs
2163 1887 Crs
2169 1311 Crs
2176 1235 Crs
2182 1465 Crs
2188 1054 Crs
2195 1152 Crs
2201 1492 Crs
2207 1779 Crs
2214 1645 Crs
2220 2775 Crs
2226 836 Crs
2233 863 Crs
2239 2559 Crs
2245 3171 Crs
2252 1223 Crs
2258 1245 Crs
2264 1506 Crs
2271 1401 Crs
2277 3997 Crs
2283 1187 Crs
2290 1109 Crs
2296 973 Crs
2302 1276 Crs
2309 1149 Crs
2315 837 Crs
2321 1456 Crs
2328 983 Crs
2334 1251 Crs
2341 1484 Crs
2347 844 Crs
2353 1944 Crs
2360 1863 Crs
2366 1509 Crs
2372 1068 Crs
2379 1348 Crs
2385 1585 Crs
2391 849 Crs
2398 1479 Crs
2404 1072 Crs
2410 1417 Crs
2417 932 Crs
2423 1552 Crs
2429 860 Crs
2436 1063 Crs
2442 1060 Crs
2448 1055 Crs
2455 1042 Crs
2461 1036 Crs
2467 863 Crs
2474 1504 Crs
2480 841 Crs
2486 1465 Crs
2493 863 Crs
2499 1040 Crs
2506 1100 Crs
2512 1259 Crs
2518 1097 Crs
2525 890 Crs
2531 1477 Crs
2537 1089 Crs
2544 1548 Crs
2550 835 Crs
2556 1066 Crs
2563 1299 Crs
2569 866 Crs
2575 1371 Crs
2582 862 Crs
2588 858 Crs
2594 1201 Crs
2601 1224 Crs
2607 1136 Crs
2613 844 Crs
2620 1065 Crs
2626 1118 Crs
2632 838 Crs
2639 844 Crs
2645 1108 Crs
2651 870 Crs
2658 835 Crs
2664 1076 Crs
2670 1469 Crs
2677 1545 Crs
2683 1136 Crs
2690 837 Crs
2696 1651 Crs
2702 1481 Crs
2709 1623 Crs
2715 841 Crs
2721 1037 Crs
2728 1803 Crs
2734 1230 Crs
2740 1738 Crs
2747 1225 Crs
2753 1053 Crs
2759 1099 Crs
2766 1248 Crs
2772 1832 Crs
2778 2093 Crs
2785 1221 Crs
2791 1578 Crs
2797 1161 Crs
2804 856 Crs
2810 844 Crs
2816 1456 Crs
2823 2048 Crs
2829 1076 Crs
2835 2375 Crs
2842 1343 Crs
2848 2139 Crs
2854 1333 Crs
2861 2814 Crs
2867 1349 Crs
2874 1303 Crs
2880 1312 Crs
2886 1333 Crs
2893 1174 Crs
2899 1907 Crs
2905 1722 Crs
2912 1635 Crs
2918 1333 Crs
2924 1382 Crs
2931 1080 Crs
2937 1714 Crs
2943 1371 Crs
2950 1892 Crs
2956 1233 Crs
2962 1045 Crs
2969 2329 Crs
2975 1797 Crs
2981 1619 Crs
2988 1684 Crs
2994 835 Crs
3000 1894 Crs
3007 1450 Crs
3013 1418 Crs
3019 836 Crs
3026 1121 Crs
3032 1075 Crs
3038 1113 Crs
3045 863 Crs
3051 991 Crs
3058 1459 Crs
3064 1067 Crs
3070 1452 Crs
3077 877 Crs
3083 1110 Crs
3089 843 Crs
3096 1444 Crs
3102 849 Crs
3108 874 Crs
3115 1320 Crs
3121 837 Crs
3127 2043 Crs
3134 1152 Crs
3140 1227 Crs
3146 1148 Crs
3153 837 Crs
3159 1207 Crs
3165 836 Crs
3172 1245 Crs
3178 1177 Crs
3184 857 Crs
3191 872 Crs
3197 1078 Crs
3203 864 Crs
3210 872 Crs
3216 1006 Crs
3222 1052 Crs
3229 1424 Crs
3235 897 Crs
3242 859 Crs
3248 1089 Crs
3254 844 Crs
3261 869 Crs
3267 1051 Crs
3273 869 Crs
3280 1262 Crs
3286 1071 Crs
3292 846 Crs
3299 864 Crs
3305 1264 Crs
3311 850 Crs
3318 855 Crs
3324 837 Crs
3330 1008 Crs
3337 1336 Crs
3343 840 Crs
3349 826 Crs
3356 1260 Crs
3362 860 Crs
3368 1267 Crs
3375 844 Crs
3381 1059 Crs
3387 1974 Crs
3394 843 Crs
3400 1256 Crs
3406 1326 Crs
3413 1125 Crs
3419 1048 Crs
3426 1530 Crs
3432 848 Crs
3438 1502 Crs
3445 1162 Crs
3451 855 Crs
3457 1055 Crs
3464 957 Crs
3470 838 Crs
3476 1077 Crs
3483 1411 Crs
3489 1857 Crs
3495 862 Crs
3502 863 Crs
3508 1248 Crs
3514 844 Crs
3521 843 Crs
3527 1078 Crs
3533 1199 Crs
3540 860 Crs
3546 1044 Crs
3552 1129 Crs
3559 840 Crs
3565 1353 Crs
3571 1072 Crs
3578 1142 Crs
3584 842 Crs
3590 1236 Crs
3597 1260 Crs
3603 1082 Crs
3610 847 Crs
3616 1491 Crs
3622 1441 Crs
3629 844 Crs
3635 1170 Crs
3641 1348 Crs
3648 1356 Crs
3654 1070 Crs
3660 1111 Crs
3667 860 Crs
3673 1059 Crs
3679 1141 Crs
3686 1289 Crs
3692 1229 Crs
3698 857 Crs
3705 877 Crs
3711 1209 Crs
3717 1057 Crs
3724 1109 Crs
3730 1115 Crs
3736 1264 Crs
3743 1145 Crs
3749 1087 Crs
3755 844 Crs
3762 841 Crs
3768 852 Crs
3775 869 Crs
3781 866 Crs
3787 1044 Crs
3794 1059 Crs
3800 860 Crs
3806 1288 Crs
3813 1019 Crs
3819 1076 Crs
3825 861 Crs
3832 860 Crs
3838 1152 Crs
3844 845 Crs
3851 1065 Crs
3857 1488 Crs
3863 846 Crs
3870 1082 Crs
3876 852 Crs
3882 888 Crs
3889 3553 Crs
3895 1262 Crs
3901 1478 Crs
3908 865 Crs
3914 1077 Crs
3920 2032 Crs
3927 848 Crs
3933 1368 Crs
3939 4171 Crs
3946 1079 Crs
3952 1318 Crs
3959 1086 Crs
3965 1498 Crs
3971 1519 Crs
3978 1614 Crs
3984 1448 Crs
3990 1042 Crs
3997 1268 Crs
4003 1005 Crs
4009 2190 Crs
4016 846 Crs
4022 1336 Crs
4028 2262 Crs
4035 852 Crs
4041 1089 Crs
4047 1089 Crs
4054 1241 Crs
4060 849 Crs
4066 1351 Crs
4073 1896 Crs
4079 844 Crs
4085 1172 Crs
4092 864 Crs
4098 950 Crs
4104 846 Crs
4111 1058 Crs
4117 1512 Crs
4123 1130 Crs
4130 1463 Crs
4136 847 Crs
4143 2927 Crs
4149 840 Crs
4155 890 Crs
4162 853 Crs
4168 1950 Crs
4174 1100 Crs
4181 848 Crs
4187 2638 Crs
4193 846 Crs
4200 845 Crs
4206 852 Crs
4212 1105 Crs
4219 849 Crs
4225 853 Crs
4231 860 Crs
4238 1138 Crs
4244 2537 Crs
4250 1181 Crs
4257 848 Crs
4263 841 Crs
4269 861 Crs
4276 1056 Crs
4282 850 Crs
4288 1051 Crs
4295 841 Crs
4301 853 Crs
4307 843 Crs
4314 3073 Crs
4320 1261 Crs
4327 858 Crs
4333 3247 Crs
4339 1245 Crs
4346 1270 Crs
4352 1466 Crs
4358 1678 Crs
4365 1135 Crs
4371 859 Crs
4377 882 Crs
4384 869 Crs
4390 1654 Crs
4396 1232 Crs
4403 863 Crs
4409 1460 Crs
4415 868 Crs
4422 1275 Crs
4428 3153 Crs
4434 842 Crs
4441 868 Crs
4447 846 Crs
4453 1248 Crs
4460 1227 Crs
4466 1267 Crs
4472 1490 Crs
4479 1271 Crs
4485 1070 Crs
4491 1160 Crs
4498 876 Crs
4504 2659 Crs
4511 853 Crs
4517 2316 Crs
4523 1712 Crs
4530 1058 Crs
4536 1311 Crs
4542 1283 Crs
4549 868 Crs
4555 1214 Crs
4561 1290 Crs
4568 913 Crs
4574 856 Crs
4580 1765 Crs
4587 860 Crs
4593 1904 Crs
4599 1660 Crs
4606 1095 Crs
4612 2464 Crs
4618 1066 Crs
4625 1268 Crs
4631 1463 Crs
4637 1088 Crs
4644 1562 Crs
4650 866 Crs
4656 1916 Crs
4663 1149 Crs
4669 1147 Crs
4675 1072 Crs
4682 852 Crs
4688 1485 Crs
4695 1270 Crs
4701 1094 Crs
4707 1204 Crs
4714 1714 Crs
4720 1303 Crs
4726 1365 Crs
4733 1482 Crs
4739 850 Crs
4745 1182 Crs
4752 1261 Crs
4758 1141 Crs
4764 889 Crs
4771 1255 Crs
4777 1118 Crs
4783 1263 Crs
4790 877 Crs
4796 1256 Crs
4802 1536 Crs
4809 1191 Crs
4815 1083 Crs
4821 1445 Crs
4828 1087 Crs
4834 850 Crs
4840 1254 Crs
4847 852 Crs
4853 846 Crs
4859 858 Crs
4866 854 Crs
4872 854 Crs
4879 868 Crs
4885 1324 Crs
4891 1136 Crs
4898 1110 Crs
4904 856 Crs
4910 977 Crs
4917 1472 Crs
4923 951 Crs
4929 1300 Crs
4936 1566 Crs
4942 918 Crs
4948 1095 Crs
4955 1117 Crs
4961 1059 Crs
4967 1247 Crs
4974 1258 Crs
4980 1252 Crs
4986 1076 Crs
4993 851 Crs
4999 1148 Crs
5005 851 Crs
5012 1098 Crs
5018 867 Crs
5024 862 Crs
5031 844 Crs
5037 1078 Crs
5044 867 Crs
5050 845 Crs
5056 866 Crs
5063 1199 Crs
5069 1080 Crs
5075 854 Crs
5082 860 Crs
5088 856 Crs
5094 838 Crs
5101 846 Crs
5107 1082 Crs
5113 1072 Crs
5120 846 Crs
5126 1430 Crs
5132 1218 Crs
5139 855 Crs
5145 855 Crs
5151 1724 Crs
5158 1269 Crs
5164 1094 Crs
5170 850 Crs
5177 873 Crs
5183 883 Crs
5189 1078 Crs
5196 858 Crs
5202 874 Crs
5208 1172 Crs
5215 1236 Crs
5221 1065 Crs
5228 1065 Crs
5234 1166 Crs
5240 850 Crs
5247 862 Crs
5253 1142 Crs
5259 872 Crs
5266 849 Crs
5272 945 Crs
5278 893 Crs
5285 855 Crs
5291 1095 Crs
5297 853 Crs
5304 1064 Crs
5310 856 Crs
5316 879 Crs
5323 1070 Crs
5329 1440 Crs
5335 1083 Crs
5342 1448 Crs
5348 1264 Crs
5354 1255 Crs
5361 846 Crs
5367 846 Crs
5373 881 Crs
5380 1282 Crs
5386 851 Crs
5392 848 Crs
5399 874 Crs
5405 1085 Crs
5412 1235 Crs
5418 1573 Crs
5424 2039 Crs
5431 1188 Crs
5437 1807 Crs
5443 1084 Crs
5450 1754 Crs
5456 1249 Crs
5462 1574 Crs
5469 859 Crs
5475 846 Crs
5481 1075 Crs
5488 1252 Crs
5494 846 Crs
5500 1879 Crs
5507 1541 Crs
5513 862 Crs
5519 1489 Crs
5526 873 Crs
5532 1064 Crs
5538 1643 Crs
5545 862 Crs
5551 880 Crs
5557 1098 Crs
5564 1083 Crs
5570 1077 Crs
5576 1353 Crs
5583 1464 Crs
5589 1257 Crs
5596 1275 Crs
5602 1117 Crs
5608 894 Crs
5615 1239 Crs
5621 1085 Crs
5627 1072 Crs
5634 875 Crs
5640 1268 Crs
5646 1719 Crs
5653 859 Crs
5659 865 Crs
5665 1098 Crs
5672 1316 Crs
5678 869 Crs
5684 1315 Crs
5691 1070 Crs
5697 1254 Crs
5703 1129 Crs
5710 852 Crs
5716 877 Crs
5722 1287 Crs
5729 876 Crs
5735 925 Crs
5741 871 Crs
5748 1114 Crs
5754 853 Crs
5760 873 Crs
5767 1078 Crs
5773 1067 Crs
5780 1683 Crs
5786 1017 Crs
5792 1137 Crs
5799 858 Crs
5805 848 Crs
5811 847 Crs
5818 1294 Crs
5824 878 Crs
5830 877 Crs
5837 1142 Crs
5843 1218 Crs
5849 1067 Crs
5856 873 Crs
5862 1398 Crs
5868 852 Crs
5875 882 Crs
5881 1245 Crs
5887 1407 Crs
5894 1256 Crs
5900 853 Crs
5906 848 Crs
5913 1236 Crs
5919 854 Crs
5925 853 Crs
5932 855 Crs
5938 1202 Crs
5944 1623 Crs
5951 878 Crs
5957 905 Crs
5964 1200 Crs
5970 872 Crs
5976 1293 Crs
5983 1086 Crs
5989 868 Crs
5995 1144 Crs
6002 1501 Crs
6008 856 Crs
6014 1242 Crs
6021 848 Crs
6027 1075 Crs
6033 1242 Crs
6040 878 Crs
6046 1081 Crs
6052 1690 Crs
6059 1090 Crs
6065 1069 Crs
6071 860 Crs
6078 1674 Crs
6084 875 Crs
6090 1903 Crs
6097 1373 Crs
6103 1064 Crs
6109 1186 Crs
6116 1069 Crs
6122 873 Crs
6128 878 Crs
6135 1077 Crs
6141 1067 Crs
6148 851 Crs
6154 1483 Crs
6160 848 Crs
6167 852 Crs
6173 877 Crs
6179 1062 Crs
6186 1235 Crs
6192 1151 Crs
6198 1179 Crs
6205 857 Crs
6211 849 Crs
6217 878 Crs
6224 1525 Crs
6230 1449 Crs
6236 1662 Crs
6243 1067 Crs
6249 1107 Crs
6255 1270 Crs
6262 1486 Crs
6268 1237 Crs
6274 1106 Crs
6281 863 Crs
6287 894 Crs
6293 1004 Crs
6300 1275 Crs
6306 1223 Crs
6313 1266 Crs
6319 855 Crs
6325 1134 Crs
6332 879 Crs
6338 853 Crs
6344 1265 Crs
6351 871 Crs
6357 850 Crs
6363 1106 Crs
6370 1249 Crs
6376 1293 Crs
6382 850 Crs
6389 1217 Crs
6395 858 Crs
6401 851 Crs
6408 1066 Crs
6414 864 Crs
6420 857 Crs
6427 1256 Crs
6433 1284 Crs
6439 872 Crs
6446 1337 Crs
6452 1194 Crs
6458 1160 Crs
6465 1278 Crs
6471 859 Crs
6477 890 Crs
6484 871 Crs
6490 1638 Crs
6497 1289 Crs
6503 1143 Crs
6509 1469 Crs
6516 894 Crs
6522 1656 Crs
6528 1488 Crs
6535 1063 Crs
6541 1521 Crs
6547 859 Crs
6554 1090 Crs
6560 866 Crs
6566 1288 Crs
6573 1066 Crs
6579 1113 Crs
6585 1150 Crs
6592 883 Crs
6598 882 Crs
6604 1075 Crs
6611 857 Crs
6617 1516 Crs
6623 1088 Crs
6630 858 Crs
6636 1139 Crs
6642 867 Crs
6649 1103 Crs
6655 859 Crs
6661 1068 Crs
6668 1474 Crs
6674 1327 Crs
6681 903 Crs
6687 1321 Crs
6693 1285 Crs
6700 1061 Crs
6706 1080 Crs
6712 1706 Crs
6719 861 Crs
6725 1693 Crs
6731 1262 Crs
6738 1121 Crs
6744 1068 Crs
6750 1274 Crs
6757 1084 Crs
6763 1105 Crs
6769 1271 Crs
6776 1145 Crs
6782 1155 Crs
6788 1189 Crs
6795 1325 Crs
6801 1510 Crs
6807 856 Crs
6814 1886 Crs
6820 865 Crs
6826 1292 Crs
6833 883 Crs
6839 868 Crs
6845 874 Crs
6852 854 Crs
6858 962 Crs
6865 1390 Crs
6871 872 Crs
6877 1141 Crs
6884 856 Crs
6890 1269 Crs
6896 857 Crs
6903 1116 Crs
6909 883 Crs
6915 870 Crs
6922 1125 Crs
6928 883 Crs
6934 1512 Crs
6941 1246 Crs
6947 1090 Crs
5160 133 Crs
% End plot #1
1.000 UL
LTb
602 4619 M
602 728 L
6345 0 V
0 3891 R
-6345 0 R
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
