%!PS-Adobe-2.0 EPSF-2.0
%%Title: graphs/4_summation_slowest.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Mon Nov 22 15:50:35 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (graphs/4_summation_slowest.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (evnu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 22 15:50:35 2010)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
602 728 M
63 0 V
stroke
518 728 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
602 1160 M
63 0 V
stroke
518 1160 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
602 1593 M
63 0 V
stroke
518 1593 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
602 2025 M
63 0 V
stroke
518 2025 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
602 2457 M
63 0 V
stroke
518 2457 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
602 2890 M
63 0 V
stroke
518 2890 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
602 3322 M
63 0 V
stroke
518 3322 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
602 3754 M
63 0 V
stroke
518 3754 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MRshow
1.000 UL
LTb
602 4187 M
63 0 V
stroke
518 4187 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
602 4619 M
63 0 V
stroke
518 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90)]
] -46.7 MRshow
1.000 UL
LTb
602 728 M
0 63 V
stroke
602 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1871 728 M
0 63 V
stroke
1871 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MCshow
1.000 UL
LTb
3140 728 M
0 63 V
stroke
3140 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40000)]
] -46.7 MCshow
1.000 UL
LTb
4409 728 M
0 63 V
stroke
4409 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60000)]
] -46.7 MCshow
1.000 UL
LTb
5678 728 M
0 63 V
stroke
5678 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80000)]
] -46.7 MCshow
1.000 UL
LTb
6947 728 M
0 63 V
stroke
6947 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 M
602 728 L
6345 0 V
0 3891 R
-6345 0 R
stroke
LCb setrgbcolor
112 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (ms)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 378 M
[ [(Helvetica) 140.0 0.0 true true 0 (Size of array in bytes)]
] -46.7 MCshow
LTb
3774 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Sum up array)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
1.00 0.65 0.00 C LCb setrgbcolor
4247 133 M
[ [(Helvetica) 140.0 0.0 true true 0 (Slowest of 30 runs)]
] -46.7 MRshow
LT0
1.00 0.65 0.00 C 602 4239 Crs
608 4067 Crs
615 3801 Crs
621 1015 Crs
627 4069 Crs
634 2708 Crs
640 911 Crs
646 967 Crs
653 4203 Crs
659 2560 Crs
665 4239 Crs
672 4122 Crs
678 905 Crs
684 3165 Crs
691 1018 Crs
697 2559 Crs
704 1303 Crs
710 4053 Crs
716 2672 Crs
723 2686 Crs
729 2651 Crs
735 1054 Crs
742 4068 Crs
748 4142 Crs
754 1571 Crs
761 4062 Crs
767 4083 Crs
773 2695 Crs
780 3174 Crs
786 2886 Crs
792 951 Crs
799 932 Crs
805 4181 Crs
811 2708 Crs
818 2972 Crs
824 4052 Crs
830 4050 Crs
837 3185 Crs
843 2592 Crs
849 1207 Crs
856 2604 Crs
862 852 Crs
868 2634 Crs
875 864 Crs
881 4165 Crs
888 2587 Crs
894 3250 Crs
900 2967 Crs
907 887 Crs
913 851 Crs
919 4160 Crs
926 851 Crs
932 3545 Crs
938 880 Crs
945 4116 Crs
951 2747 Crs
957 2603 Crs
964 3364 Crs
970 2650 Crs
976 2247 Crs
983 4188 Crs
989 2900 Crs
995 1108 Crs
1002 862 Crs
1008 4188 Crs
1014 2404 Crs
1021 4181 Crs
1027 3158 Crs
1033 2540 Crs
1040 902 Crs
1046 1119 Crs
1052 3600 Crs
1059 1112 Crs
1065 2653 Crs
1072 4177 Crs
1078 976 Crs
1084 4119 Crs
1091 971 Crs
1097 3266 Crs
1103 848 Crs
1110 935 Crs
1116 994 Crs
1122 3182 Crs
1129 934 Crs
1135 919 Crs
1141 4084 Crs
1148 934 Crs
1154 977 Crs
1160 756 Crs
1167 977 Crs
1173 1062 Crs
1179 852 Crs
1186 4225 Crs
1192 2675 Crs
1198 904 Crs
1205 4185 Crs
1211 883 Crs
1217 895 Crs
1224 906 Crs
1230 2400 Crs
1237 920 Crs
1243 972 Crs
1249 4174 Crs
1256 4230 Crs
1262 2711 Crs
1268 4163 Crs
1275 3165 Crs
1281 4198 Crs
1287 2718 Crs
1294 3759 Crs
1300 853 Crs
1306 2668 Crs
1313 914 Crs
1319 2672 Crs
1325 906 Crs
1332 3285 Crs
1338 931 Crs
1344 906 Crs
1351 2602 Crs
1357 4156 Crs
1363 2127 Crs
1370 1120 Crs
1376 4180 Crs
1382 2958 Crs
1389 2868 Crs
1395 2620 Crs
1401 4194 Crs
1408 897 Crs
1414 2910 Crs
1421 875 Crs
1427 2369 Crs
1433 903 Crs
1440 4174 Crs
1446 985 Crs
1452 928 Crs
1459 3279 Crs
1465 972 Crs
1471 4188 Crs
1478 986 Crs
1484 4054 Crs
1490 1088 Crs
1497 2664 Crs
1503 4102 Crs
1509 853 Crs
1516 4121 Crs
1522 1082 Crs
1528 4174 Crs
1535 2663 Crs
1541 3639 Crs
1547 889 Crs
1554 2919 Crs
1560 4180 Crs
1566 968 Crs
1573 2703 Crs
1579 1062 Crs
1585 2669 Crs
1592 2369 Crs
1598 2705 Crs
1605 4192 Crs
1611 1179 Crs
1617 3809 Crs
1624 4242 Crs
1630 4143 Crs
1636 3799 Crs
1643 2750 Crs
1649 3387 Crs
1655 2877 Crs
1662 880 Crs
1668 2558 Crs
1674 3631 Crs
1681 1093 Crs
1687 4235 Crs
1693 2649 Crs
1700 3886 Crs
1706 1099 Crs
1712 4102 Crs
1719 4070 Crs
1725 4051 Crs
1731 881 Crs
1738 4192 Crs
1744 3158 Crs
1750 3671 Crs
1757 2687 Crs
1763 933 Crs
1769 3760 Crs
1776 4180 Crs
1782 3154 Crs
1789 4175 Crs
1795 883 Crs
1801 4205 Crs
1808 933 Crs
1814 1903 Crs
1820 4218 Crs
1827 4175 Crs
1833 1087 Crs
1839 906 Crs
1846 905 Crs
1852 907 Crs
1858 808 Crs
1865 2585 Crs
1871 1125 Crs
1877 4053 Crs
1884 4163 Crs
1890 2961 Crs
1896 2726 Crs
1903 4024 Crs
1909 4135 Crs
1915 3984 Crs
1922 4143 Crs
1928 908 Crs
1934 4158 Crs
1941 3598 Crs
1947 4200 Crs
1953 2664 Crs
1960 4173 Crs
1966 4222 Crs
1973 1023 Crs
1979 2916 Crs
1985 4174 Crs
1992 3934 Crs
1998 2647 Crs
2004 885 Crs
2011 3291 Crs
2017 2955 Crs
2023 2677 Crs
2030 4237 Crs
2036 2601 Crs
2042 4056 Crs
2049 4078 Crs
2055 3189 Crs
2061 3807 Crs
2068 909 Crs
2074 3184 Crs
2080 4222 Crs
2087 900 Crs
2093 926 Crs
2099 3417 Crs
2106 2659 Crs
2112 3670 Crs
2118 2636 Crs
2125 2681 Crs
2131 4180 Crs
2137 900 Crs
2144 3718 Crs
2150 904 Crs
2157 2573 Crs
2163 4091 Crs
2169 2785 Crs
2176 2966 Crs
2182 3789 Crs
2188 2550 Crs
2195 3345 Crs
2201 4159 Crs
2207 4100 Crs
2214 3591 Crs
2220 4166 Crs
2226 877 Crs
2233 977 Crs
2239 4046 Crs
2245 4034 Crs
2252 3733 Crs
2258 4133 Crs
2264 4167 Crs
2271 3899 Crs
2277 4203 Crs
2283 3796 Crs
2290 2959 Crs
2296 1817 Crs
2302 4222 Crs
2309 3346 Crs
2315 885 Crs
2321 3307 Crs
2328 2099 Crs
2334 4133 Crs
2341 4214 Crs
2347 882 Crs
2353 4195 Crs
2360 4237 Crs
2366 2680 Crs
2372 2668 Crs
2379 3175 Crs
2385 3160 Crs
2391 945 Crs
2398 3747 Crs
2404 2716 Crs
2410 3742 Crs
2417 1505 Crs
2423 3145 Crs
2429 1069 Crs
2436 2567 Crs
2442 2576 Crs
2448 2565 Crs
2455 2584 Crs
2461 2538 Crs
2467 1095 Crs
2474 3581 Crs
2480 910 Crs
2486 4163 Crs
2493 1098 Crs
2499 2568 Crs
2506 2896 Crs
2512 4066 Crs
2518 2699 Crs
2525 1324 Crs
2531 3652 Crs
2537 2630 Crs
2544 3754 Crs
2550 860 Crs
2556 2767 Crs
2563 2657 Crs
2569 1054 Crs
2575 4191 Crs
2582 1073 Crs
2588 909 Crs
2594 3892 Crs
2601 4089 Crs
2607 3155 Crs
2613 932 Crs
2620 2590 Crs
2626 3069 Crs
2632 876 Crs
2639 939 Crs
2645 2947 Crs
2651 1152 Crs
2658 850 Crs
2664 2674 Crs
2670 2611 Crs
2677 4198 Crs
2683 2034 Crs
2690 872 Crs
2696 4174 Crs
2702 4202 Crs
2709 4209 Crs
2715 896 Crs
2721 2537 Crs
2728 4181 Crs
2734 4145 Crs
2740 4133 Crs
2747 2728 Crs
2753 2652 Crs
2759 2624 Crs
2766 4138 Crs
2772 4177 Crs
2778 3497 Crs
2785 4062 Crs
2791 2878 Crs
2797 3431 Crs
2804 1029 Crs
2810 925 Crs
2816 4103 Crs
2823 4183 Crs
2829 2704 Crs
2835 4194 Crs
2842 2867 Crs
2848 4192 Crs
2854 2952 Crs
2861 4218 Crs
2867 3296 Crs
2874 2662 Crs
2880 2582 Crs
2886 2866 Crs
2893 3167 Crs
2899 3259 Crs
2905 4048 Crs
2912 4224 Crs
2918 3168 Crs
2924 4186 Crs
2931 2878 Crs
2937 4173 Crs
2943 2989 Crs
2950 4247 Crs
2956 4063 Crs
2962 2591 Crs
2969 4160 Crs
2975 4084 Crs
2981 4188 Crs
2988 4162 Crs
2994 850 Crs
3000 4069 Crs
3007 4178 Crs
3013 4171 Crs
3019 851 Crs
3026 2834 Crs
3032 2692 Crs
3038 2952 Crs
3045 1076 Crs
3051 2125 Crs
3058 4077 Crs
3064 2642 Crs
3070 3426 Crs
3077 950 Crs
3083 2479 Crs
3089 897 Crs
3096 4069 Crs
3102 897 Crs
3108 982 Crs
3115 3262 Crs
3121 851 Crs
3127 4176 Crs
3134 3286 Crs
3140 2673 Crs
3146 3240 Crs
3153 853 Crs
3159 3621 Crs
3165 850 Crs
3172 4233 Crs
3178 3345 Crs
3184 917 Crs
3191 982 Crs
3197 2612 Crs
3203 957 Crs
3210 978 Crs
3216 2266 Crs
3222 2637 Crs
3229 4104 Crs
3235 1351 Crs
3242 922 Crs
3248 2422 Crs
3254 907 Crs
3261 959 Crs
3267 2629 Crs
3273 1107 Crs
3280 4175 Crs
3286 2669 Crs
3292 910 Crs
3299 1071 Crs
3305 4167 Crs
3311 967 Crs
3318 944 Crs
3324 855 Crs
3330 2284 Crs
3337 3074 Crs
3343 852 Crs
3349 761 Crs
3356 4174 Crs
3362 921 Crs
3368 4192 Crs
3375 897 Crs
3381 2482 Crs
3387 4089 Crs
3394 890 Crs
3400 4161 Crs
3406 3101 Crs
3413 2746 Crs
3419 2587 Crs
3426 4207 Crs
3432 897 Crs
3438 4175 Crs
3445 3534 Crs
3451 972 Crs
3457 2649 Crs
3464 1529 Crs
3470 853 Crs
3476 2595 Crs
3483 3231 Crs
3489 4174 Crs
3495 1054 Crs
3502 1065 Crs
3508 4112 Crs
3514 894 Crs
3521 898 Crs
3527 2666 Crs
3533 3631 Crs
3540 920 Crs
3546 2565 Crs
3552 3057 Crs
3559 853 Crs
3565 3346 Crs
3571 2696 Crs
3578 3374 Crs
3584 876 Crs
3590 4047 Crs
3597 4234 Crs
3603 2545 Crs
3610 873 Crs
3616 4180 Crs
3622 4056 Crs
3629 898 Crs
3635 3508 Crs
3641 3181 Crs
3648 3101 Crs
3654 2656 Crs
3660 2905 Crs
3667 924 Crs
3673 2682 Crs
3679 3140 Crs
3686 2682 Crs
3692 4103 Crs
3698 905 Crs
3705 982 Crs
3711 3922 Crs
3717 2676 Crs
3724 2955 Crs
3730 2969 Crs
3736 4156 Crs
3743 3304 Crs
3749 2694 Crs
3755 896 Crs
3762 858 Crs
3768 951 Crs
3775 1107 Crs
3781 1082 Crs
3787 2535 Crs
3794 2656 Crs
3800 910 Crs
3806 4230 Crs
3813 2332 Crs
3819 2642 Crs
3825 1028 Crs
3832 1019 Crs
3838 3286 Crs
3844 893 Crs
3851 2581 Crs
3857 4055 Crs
3863 910 Crs
3870 2660 Crs
3876 888 Crs
3882 984 Crs
3889 4164 Crs
3895 4136 Crs
3901 4104 Crs
3908 1062 Crs
3914 2631 Crs
3920 4163 Crs
3927 907 Crs
3933 2931 Crs
3939 4210 Crs
3946 2715 Crs
3952 3163 Crs
3959 2662 Crs
3965 4122 Crs
3971 4141 Crs
3978 3302 Crs
3984 4097 Crs
3990 2361 Crs
3997 4212 Crs
4003 2121 Crs
4009 4205 Crs
4016 898 Crs
4022 2708 Crs
4028 4163 Crs
4035 889 Crs
4041 2927 Crs
4047 2910 Crs
4054 4090 Crs
4060 902 Crs
4066 3162 Crs
4073 4177 Crs
4079 882 Crs
4085 3338 Crs
4092 905 Crs
4098 1528 Crs
4104 889 Crs
4111 2667 Crs
4117 4192 Crs
4123 2970 Crs
4130 4112 Crs
4136 897 Crs
4143 4183 Crs
4149 856 Crs
4155 1266 Crs
4162 950 Crs
4168 3421 Crs
4174 2685 Crs
4181 909 Crs
4187 4232 Crs
4193 896 Crs
4200 887 Crs
4206 953 Crs
4212 2914 Crs
4219 909 Crs
4225 944 Crs
4231 893 Crs
4238 2951 Crs
4244 4161 Crs
4250 3555 Crs
4257 900 Crs
4263 846 Crs
4269 909 Crs
4276 2629 Crs
4282 923 Crs
4288 2594 Crs
4295 852 Crs
4301 884 Crs
4307 865 Crs
4314 4183 Crs
4320 4217 Crs
4327 906 Crs
4333 4174 Crs
4339 4086 Crs
4346 4240 Crs
4352 4186 Crs
4358 4174 Crs
4365 2940 Crs
4371 888 Crs
4377 971 Crs
4384 1062 Crs
4390 4193 Crs
4396 4098 Crs
4403 908 Crs
4409 4192 Crs
4415 925 Crs
4422 4190 Crs
4428 4193 Crs
4434 851 Crs
4441 1078 Crs
4447 851 Crs
4453 4221 Crs
4460 4038 Crs
4466 4067 Crs
4472 4211 Crs
4479 4115 Crs
4485 2613 Crs
4491 3168 Crs
4498 940 Crs
4504 4188 Crs
4511 934 Crs
4517 4122 Crs
4523 3600 Crs
4530 2630 Crs
4536 2704 Crs
4542 4165 Crs
4549 916 Crs
4555 3596 Crs
4561 4200 Crs
4568 1446 Crs
4574 955 Crs
4580 4174 Crs
4587 885 Crs
4593 4175 Crs
4599 4174 Crs
4606 2662 Crs
4612 4193 Crs
4618 2704 Crs
4625 4176 Crs
4631 4117 Crs
4637 2894 Crs
4644 4130 Crs
4650 1044 Crs
4656 4190 Crs
4663 2697 Crs
4669 2674 Crs
4675 2572 Crs
4682 923 Crs
4688 4139 Crs
4695 4145 Crs
4701 2668 Crs
4707 3112 Crs
4714 4171 Crs
4720 2790 Crs
4726 3241 Crs
4733 4061 Crs
4739 898 Crs
4745 3392 Crs
4752 4205 Crs
4758 3169 Crs
4764 1237 Crs
4771 4087 Crs
4777 3140 Crs
4783 4086 Crs
4790 1132 Crs
4796 4115 Crs
4802 4065 Crs
4809 3742 Crs
4815 2676 Crs
4821 3601 Crs
4828 2786 Crs
4834 857 Crs
4840 4090 Crs
4847 923 Crs
4853 857 Crs
4859 866 Crs
4866 896 Crs
4872 928 Crs
4879 918 Crs
4885 2974 Crs
4891 2639 Crs
4898 2945 Crs
4904 889 Crs
4910 1942 Crs
4917 4174 Crs
4923 1446 Crs
4929 2698 Crs
4936 4202 Crs
4942 1469 Crs
4948 2658 Crs
4955 2967 Crs
4961 2640 Crs
4967 4125 Crs
4974 4211 Crs
4980 4126 Crs
4986 2654 Crs
4993 902 Crs
4999 3297 Crs
5005 856 Crs
5012 2645 Crs
5018 901 Crs
5024 979 Crs
5031 853 Crs
5037 2672 Crs
5044 1030 Crs
5050 857 Crs
5056 910 Crs
5063 3465 Crs
5069 2592 Crs
5075 910 Crs
5082 967 Crs
5088 936 Crs
5094 789 Crs
5101 854 Crs
5107 2577 Crs
5113 2584 Crs
5120 862 Crs
5126 3756 Crs
5132 3760 Crs
5139 860 Crs
5145 849 Crs
5151 3670 Crs
5158 4225 Crs
5164 2792 Crs
5170 897 Crs
5177 1077 Crs
5183 1116 Crs
5189 2636 Crs
5196 949 Crs
5202 899 Crs
5208 3272 Crs
5215 4079 Crs
5221 2666 Crs
5228 2655 Crs
5234 3338 Crs
5240 885 Crs
5247 853 Crs
5253 2895 Crs
5259 1072 Crs
5266 867 Crs
5272 1506 Crs
5278 1219 Crs
5285 932 Crs
5291 2583 Crs
5297 910 Crs
5304 2538 Crs
5310 918 Crs
5316 945 Crs
5323 2698 Crs
5329 2611 Crs
5335 2554 Crs
5342 3350 Crs
5348 4174 Crs
5354 4132 Crs
5361 854 Crs
5367 854 Crs
5373 1141 Crs
5380 2701 Crs
5386 889 Crs
5392 853 Crs
5399 1071 Crs
5405 2579 Crs
5412 4081 Crs
5418 4160 Crs
5424 4138 Crs
5431 2636 Crs
5437 3481 Crs
5443 2839 Crs
5450 4321 Crs
5456 4188 Crs
5462 4095 Crs
5469 956 Crs
5475 858 Crs
5481 2662 Crs
5488 4089 Crs
5494 854 Crs
5500 4244 Crs
5507 4101 Crs
5513 974 Crs
5519 4174 Crs
5526 1073 Crs
5532 2670 Crs
5538 4052 Crs
5545 948 Crs
5551 1120 Crs
5557 2629 Crs
5564 2648 Crs
5570 2619 Crs
5576 2963 Crs
5583 4133 Crs
5589 4099 Crs
5596 4113 Crs
5602 2953 Crs
5608 983 Crs
5615 4108 Crs
5621 2839 Crs
5627 2557 Crs
5634 1089 Crs
5640 4219 Crs
5646 4248 Crs
5653 859 Crs
5659 1004 Crs
5665 2916 Crs
5672 2708 Crs
5678 899 Crs
5684 2989 Crs
5691 2711 Crs
5697 2589 Crs
5703 3196 Crs
5710 865 Crs
5716 1107 Crs
5722 2703 Crs
5729 1099 Crs
5735 1452 Crs
5741 919 Crs
5748 2652 Crs
5754 857 Crs
5760 1068 Crs
5767 2621 Crs
5773 2552 Crs
5780 3164 Crs
5786 2083 Crs
5792 2976 Crs
5799 949 Crs
5805 855 Crs
5811 856 Crs
5818 4212 Crs
5824 1103 Crs
5830 1098 Crs
5837 3178 Crs
5843 3759 Crs
5849 2584 Crs
5856 1073 Crs
5862 4226 Crs
5868 889 Crs
5875 912 Crs
5881 4141 Crs
5887 3306 Crs
5894 4098 Crs
5900 899 Crs
5906 855 Crs
5913 4086 Crs
5919 891 Crs
5925 890 Crs
5932 873 Crs
5938 3688 Crs
5944 3206 Crs
5951 911 Crs
5957 983 Crs
5964 3354 Crs
5970 1048 Crs
5976 2641 Crs
5983 2796 Crs
5989 986 Crs
5995 2960 Crs
6002 4050 Crs
6008 909 Crs
6014 4137 Crs
6021 858 Crs
6027 2608 Crs
6033 4116 Crs
6040 1058 Crs
6046 2709 Crs
6052 3941 Crs
6059 2708 Crs
6065 2572 Crs
6071 951 Crs
6078 4243 Crs
6084 1076 Crs
6090 4178 Crs
6097 3238 Crs
6103 2559 Crs
6109 3522 Crs
6116 2587 Crs
6122 1059 Crs
6128 901 Crs
6135 2474 Crs
6141 2661 Crs
6148 855 Crs
6154 4129 Crs
6160 855 Crs
6167 853 Crs
6173 1080 Crs
6179 2632 Crs
6186 3926 Crs
6192 2954 Crs
6198 3513 Crs
6205 901 Crs
6211 856 Crs
6217 895 Crs
6224 4212 Crs
6230 3900 Crs
6236 4174 Crs
6243 2668 Crs
6249 2895 Crs
6255 4146 Crs
6262 3951 Crs
6268 4060 Crs
6274 2959 Crs
6281 932 Crs
6287 1228 Crs
6293 2121 Crs
6300 4177 Crs
6306 3795 Crs
6313 4176 Crs
6319 854 Crs
6325 2988 Crs
6332 1077 Crs
6338 864 Crs
6344 4090 Crs
6351 1027 Crs
6357 859 Crs
6363 2630 Crs
6370 4180 Crs
6376 4233 Crs
6382 854 Crs
6389 3775 Crs
6395 914 Crs
6401 865 Crs
6408 2320 Crs
6414 968 Crs
6420 899 Crs
6427 3919 Crs
6433 4186 Crs
6439 875 Crs
6446 4446 Crs
6452 3497 Crs
6458 2553 Crs
6465 4107 Crs
6471 911 Crs
6477 923 Crs
6484 989 Crs
6490 4099 Crs
6497 4175 Crs
6503 3180 Crs
6509 3808 Crs
6516 1127 Crs
6522 4184 Crs
6528 4192 Crs
6535 2627 Crs
6541 4196 Crs
6547 915 Crs
6554 2683 Crs
6560 914 Crs
6566 4193 Crs
6573 2635 Crs
6579 2861 Crs
6585 2692 Crs
6592 1120 Crs
6598 1123 Crs
6604 2629 Crs
6611 890 Crs
6617 4178 Crs
6623 2674 Crs
6630 909 Crs
6636 3168 Crs
6642 881 Crs
6649 2943 Crs
6655 908 Crs
6661 2558 Crs
6668 4030 Crs
6674 3000 Crs
6681 1116 Crs
6687 2968 Crs
6693 4080 Crs
6700 2595 Crs
6706 2601 Crs
6712 4192 Crs
6719 881 Crs
6725 3760 Crs
6731 4128 Crs
6738 2896 Crs
6744 2659 Crs
6750 4193 Crs
6757 2651 Crs
6763 2877 Crs
6769 4185 Crs
6776 2960 Crs
6782 3228 Crs
6788 3670 Crs
6795 2898 Crs
6801 2662 Crs
6807 891 Crs
6814 4201 Crs
6820 940 Crs
6826 4144 Crs
6833 1117 Crs
6839 892 Crs
6845 1015 Crs
6852 869 Crs
6858 1592 Crs
6865 3674 Crs
6871 993 Crs
6877 3167 Crs
6884 894 Crs
6890 2607 Crs
6896 879 Crs
6903 2919 Crs
6909 927 Crs
6915 1001 Crs
6922 2569 Crs
6928 928 Crs
6934 4232 Crs
6941 4131 Crs
6947 2688 Crs
4530 133 Crs
% End plot #1
1.000 UL
LTb
602 4619 M
602 728 L
6345 0 V
0 3891 R
-6345 0 R
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
