%!PS-Adobe-2.0 EPSF-2.0
%%Title: graphs/4_ascending_fastestandmedian.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Sun Nov 21 14:57:47 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (graphs/4_ascending_fastestandmedian.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (evnu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Nov 21 14:57:47 2010)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 728 M
63 0 V
stroke
602 728 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
686 1214 M
63 0 V
stroke
602 1214 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
686 1701 M
63 0 V
stroke
602 1701 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
686 2187 M
63 0 V
stroke
602 2187 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
686 2674 M
63 0 V
stroke
602 2674 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.2)]
] -46.7 MRshow
1.000 UL
LTb
686 3160 M
63 0 V
stroke
602 3160 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.4)]
] -46.7 MRshow
1.000 UL
LTb
686 3646 M
63 0 V
stroke
602 3646 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.6)]
] -46.7 MRshow
1.000 UL
LTb
686 4133 M
63 0 V
stroke
602 4133 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.8)]
] -46.7 MRshow
1.000 UL
LTb
686 4619 M
63 0 V
stroke
602 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
686 728 M
0 63 V
stroke
686 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1938 728 M
0 63 V
stroke
1938 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
3190 728 M
0 63 V
stroke
3190 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
4443 728 M
0 63 V
stroke
4443 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
5695 728 M
0 63 V
stroke
5695 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
6947 728 M
0 63 V
stroke
6947 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 M
686 728 L
6261 0 V
0 3891 R
-6261 0 R
stroke
LCb setrgbcolor
112 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (ms)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3816 378 M
[ [(Helvetica) 140.0 0.0 true true 0 (Size of array in bytes)]
] -46.7 MCshow
LTb
3816 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Sum up array with ascending numbers)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
3.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
3249 133 M
[ [(Helvetica) 140.0 0.0 true true 0 (Fastest of 30 run)]
] -46.7 MRshow
LT0
1.00 0.00 0.00 C 3333 133 M
399 0 V
686 1085 M
63 -2 V
62 2 V
63 5 V
62 54 V
63 -49 V
63 32 V
62 -24 V
63 -10 V
62 2 V
63 0 V
63 0 V
62 22 V
63 -19 V
63 46 V
62 -49 V
63 8 V
62 -3 V
63 32 V
63 -29 V
62 -3 V
63 -2 V
62 0 V
63 31 V
63 -26 V
62 -3 V
63 3 V
62 34 V
63 73 V
63 -107 V
62 0 V
63 -3 V
63 12 V
62 -9 V
63 12 V
62 -10 V
63 0 V
63 -2 V
62 29 V
63 68 V
62 -90 V
63 -5 V
63 2 V
62 0 V
63 117 V
62 -114 V
63 0 V
63 12 V
62 -12 V
63 24 V
63 73 V
62 46 V
63 -141 V
62 0 V
63 3 V
63 51 V
62 -51 V
63 148 V
62 -146 V
63 -2 V
63 80 V
62 -78 V
63 34 V
62 85 V
63 -121 V
63 5 V
62 -3 V
63 0 V
62 0 V
63 3 V
63 4 V
62 -2 V
63 -5 V
63 0 V
62 -2 V
63 2 V
62 3 V
63 -3 V
63 3 V
62 0 V
63 -3 V
62 5 V
63 -2 V
63 0 V
62 0 V
63 2 V
62 2 V
63 3 V
63 -5 V
62 5 V
63 -3 V
63 0 V
62 3 V
63 0 V
62 -3 V
63 5 V
63 0 V
62 3 V
63 -3 V
62 0 V
63 3 V
686 1085 Pls
749 1083 Pls
811 1085 Pls
874 1090 Pls
936 1144 Pls
999 1095 Pls
1062 1127 Pls
1124 1103 Pls
1187 1093 Pls
1249 1095 Pls
1312 1095 Pls
1375 1095 Pls
1437 1117 Pls
1500 1098 Pls
1563 1144 Pls
1625 1095 Pls
1688 1103 Pls
1750 1100 Pls
1813 1132 Pls
1876 1103 Pls
1938 1100 Pls
2001 1098 Pls
2063 1098 Pls
2126 1129 Pls
2189 1103 Pls
2251 1100 Pls
2314 1103 Pls
2376 1137 Pls
2439 1210 Pls
2502 1103 Pls
2564 1103 Pls
2627 1100 Pls
2690 1112 Pls
2752 1103 Pls
2815 1115 Pls
2877 1105 Pls
2940 1105 Pls
3003 1103 Pls
3065 1132 Pls
3128 1200 Pls
3190 1110 Pls
3253 1105 Pls
3316 1107 Pls
3378 1107 Pls
3441 1224 Pls
3503 1110 Pls
3566 1110 Pls
3629 1122 Pls
3691 1110 Pls
3754 1134 Pls
3817 1207 Pls
3879 1253 Pls
3942 1112 Pls
4004 1112 Pls
4067 1115 Pls
4130 1166 Pls
4192 1115 Pls
4255 1263 Pls
4317 1117 Pls
4380 1115 Pls
4443 1195 Pls
4505 1117 Pls
4568 1151 Pls
4630 1236 Pls
4693 1115 Pls
4756 1120 Pls
4818 1117 Pls
4881 1117 Pls
4943 1117 Pls
5006 1120 Pls
5069 1124 Pls
5131 1122 Pls
5194 1117 Pls
5257 1117 Pls
5319 1115 Pls
5382 1117 Pls
5444 1120 Pls
5507 1117 Pls
5570 1120 Pls
5632 1120 Pls
5695 1117 Pls
5757 1122 Pls
5820 1120 Pls
5883 1120 Pls
5945 1120 Pls
6008 1122 Pls
6070 1124 Pls
6133 1127 Pls
6196 1122 Pls
6258 1127 Pls
6321 1124 Pls
6384 1124 Pls
6446 1127 Pls
6509 1127 Pls
6571 1124 Pls
6634 1129 Pls
6697 1129 Pls
6759 1132 Pls
6822 1129 Pls
6884 1129 Pls
6947 1132 Pls
3532 133 Pls
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT0
1.00 0.65 0.00 C LCb setrgbcolor
5244 133 M
[ [(Helvetica) 140.0 0.0 true true 0 (Median of 30 runs)]
] -46.7 MRshow
LT0
1.00 0.65 0.00 C 5328 133 M
399 0 V
686 1068 M
63 49 V
62 -49 V
63 25 V
62 48 V
63 -48 V
63 24 V
62 49 V
63 -73 V
62 73 V
63 -73 V
63 0 V
62 24 V
63 -24 V
63 48 V
62 -48 V
63 24 V
62 -24 V
63 24 V
63 73 V
62 -97 V
63 0 V
62 24 V
63 0 V
63 0 V
62 -24 V
63 24 V
62 24 V
63 49 V
63 -97 V
62 0 V
63 0 V
63 0 V
62 0 V
63 24 V
62 0 V
63 -24 V
63 24 V
62 0 V
63 97 V
62 25 V
63 -146 V
63 48 V
62 -48 V
63 146 V
62 -122 V
63 -24 V
63 24 V
62 24 V
63 0 V
63 49 V
62 49 V
63 0 V
62 -146 V
63 24 V
63 49 V
62 121 V
63 -24 V
62 -122 V
63 -24 V
63 122 V
62 -122 V
63 24 V
62 146 V
63 -170 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 49 V
62 -49 V
63 24 V
63 -24 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 49 V
63 -49 V
63 0 V
62 0 V
63 0 V
62 24 V
63 0 V
63 0 V
62 25 V
63 -49 V
62 24 V
63 -24 V
686 1068 Crs
749 1117 Crs
811 1068 Crs
874 1093 Crs
936 1141 Crs
999 1093 Crs
1062 1117 Crs
1124 1166 Crs
1187 1093 Crs
1249 1166 Crs
1312 1093 Crs
1375 1093 Crs
1437 1117 Crs
1500 1093 Crs
1563 1141 Crs
1625 1093 Crs
1688 1117 Crs
1750 1093 Crs
1813 1117 Crs
1876 1190 Crs
1938 1093 Crs
2001 1093 Crs
2063 1117 Crs
2126 1117 Crs
2189 1117 Crs
2251 1093 Crs
2314 1117 Crs
2376 1141 Crs
2439 1190 Crs
2502 1093 Crs
2564 1093 Crs
2627 1093 Crs
2690 1093 Crs
2752 1093 Crs
2815 1117 Crs
2877 1117 Crs
2940 1093 Crs
3003 1117 Crs
3065 1117 Crs
3128 1214 Crs
3190 1239 Crs
3253 1093 Crs
3316 1141 Crs
3378 1093 Crs
3441 1239 Crs
3503 1117 Crs
3566 1093 Crs
3629 1117 Crs
3691 1141 Crs
3754 1141 Crs
3817 1190 Crs
3879 1239 Crs
3942 1239 Crs
4004 1093 Crs
4067 1117 Crs
4130 1166 Crs
4192 1287 Crs
4255 1263 Crs
4317 1141 Crs
4380 1117 Crs
4443 1239 Crs
4505 1117 Crs
4568 1141 Crs
4630 1287 Crs
4693 1117 Crs
4756 1117 Crs
4818 1117 Crs
4881 1117 Crs
4943 1117 Crs
5006 1117 Crs
5069 1166 Crs
5131 1117 Crs
5194 1141 Crs
5257 1117 Crs
5319 1117 Crs
5382 1117 Crs
5444 1117 Crs
5507 1117 Crs
5570 1117 Crs
5632 1117 Crs
5695 1117 Crs
5757 1117 Crs
5820 1117 Crs
5883 1117 Crs
5945 1117 Crs
6008 1117 Crs
6070 1117 Crs
6133 1117 Crs
6196 1117 Crs
6258 1166 Crs
6321 1117 Crs
6384 1117 Crs
6446 1117 Crs
6509 1117 Crs
6571 1141 Crs
6634 1141 Crs
6697 1141 Crs
6759 1166 Crs
6822 1117 Crs
6884 1141 Crs
6947 1117 Crs
5527 133 Crs
% End plot #2
1.000 UL
LTb
686 4619 M
686 728 L
6261 0 V
0 3891 R
-6261 0 R
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
